#!/bin/bash
# ********************************************************************
# Ericsson LMI                                    SCRIPT
# ********************************************************************
#
# (c) Ericsson LMI 2014 - All rights reserved.
#
# The copyright to the computer program(s) herein is the property
# of Ericsson LMI. The programs may be used and/or copied only with
# the written permission from Ericsson LMI or in accordance with the
# terms and conditions stipulated in the agreement/contract under
# which the program(s) have been supplied.
#
# ********************************************************************
# Name    : cp_from_old_image.bsh
#
# Purpose : Script to copy the files from old image avilable.
#
# Usage   : .
#
# ********************************************************************

PROGNAME=${0##*/}
SCRIPT_PATH=$0
LOGGER_TAG="LogCollectionService:"
SHORTOPTS="o:i:a:f:m:h"
LONGOPTS="output_path:,instance_name:,age:,file2copy:,metadata:,help"
ARGS=$(getopt -s bash --options $SHORTOPTS --longoptions $LONGOPTS --name $PROGNAME -- "$@" )
eval set -- "$ARGS"
Usage() {
cat <<EOF
  Usage: $0 [--output_path <path where to store the logs> ] [ --instance_name <VM name(s)> ] [--age=<How old image to check>] [--file2copy <path of the file to copy from image> ] [--metadata <path for bash script logs to be placed in>] [--help]

EOF
}
while true; do
  case "$1" in
    -o | --output_path ) OUTPUT_PATH="$2"; shift 2 ;;
    -i | --instance_name ) SRV_NAME=($(echo $2 | tr -s "," " ")); shift 2 ;;
    -f | --file2copy ) LIST_OF_FILES_TO_COPY_OUT=($(echo $2 | tr -s "," " ")); shift 2 ;;
    -a | --age ) AGE="$2"; shift 2 ;;
    -m | --metadata ) METADATA="$2"; shift 2 ;;
    -h ) Usage ; shift;;
     * ) break ;;
  esac
done
IMAGE_FOUND=FALSE
INSTANCE_PATH="/var/lib/libvirt/instances/"
DATE=$(date +%Y%m%d_%H%M%S)
OUT_FILE=${METADATA}/$(hostname)_1mag3_c0py_${DATE}.out
#LOG_FILE=${OUTPUT_PATH}/cp_from_old_image/$(hostname)_1mag3_c0py_${DATE}.log
[[ ! -d ${OUTPUT_PATH}/cp_from_old_image/ ]] && mkdir -p ${OUTPUT_PATH}/cp_from_old_image/
echo "Collecting logs from ${AGE} day(s) old instance image for [${SRV_NAME}] on $(hostname)."
echo ${AGE} | egrep "^[1-9]+$" > /dev/null 2>&1
if [[ $? -ne 0 ]]; then
  echo "Invalid parameter [age], skipping the file collection."
  exit 1
fi
echo "find ${INSTANCE_PATH} -name "*qcow2*" -type f -mmin -$((24*60*${AGE})) -exec ls -halt {} + | grep last_undefined_vm | grep ERIC" > ${OUT_FILE}_find_cmd_out
find ${INSTANCE_PATH} -name "*qcow2*" -type f -mmin -$((24*60*${AGE})) -exec ls -halt {} + | grep last_undefined_vm | grep ERIC > ${OUT_FILE} 2> /dev/null
if [[ -s ${OUT_FILE} ]]; then
  for VM_NAME in $(echo ${SRV_NAME[@]}); do
    for file in $(awk '{print $NF}' ${OUT_FILE}); do
      SRV_IMG_NAME=$(echo ${file} | perl -pi -e "s|${INSTANCE_PATH}(.+)/last_undefined_vm/.*|\$1|g")
      TIMESTAMP=$(echo ${file} | perl -pi -e "s|.+qcow2-([0-9]+)|\$1|g")
      if [[ ${SRV_IMG_NAME} == ${VM_NAME} ]]; then
        IMAGE_FOUND=TRUE
        echo "Found the required image file to collect the logs..."
        echo "Image file name - [${file}]"
        rpm -qa | grep 'guestfs-tool' > /dev/null 2>&1
        if [[ $? -ne 0 ]]; then
          echo "Installing libguestfs-tools-c rpm."
          yum install -y libguestfs-tools-c > /dev/null 2>&1
        else
           echo "libguestfs-tools-c already installed."
        fi
        OUT_DIR="${OUTPUT_PATH}/cp_from_old_image/${hostname}/${VM_NAME}/${TIMESTAMP}"
        mkdir -p ${OUT_DIR} > /dev/null 2>&1
        echo "Extracting [${LIST_OF_FILES_TO_COPY_OUT[@]}]."
        /usr/bin/virt-copy-out -a ${file} ${LIST_OF_FILES_TO_COPY_OUT[@]} ${OUT_DIR} >> ${OUT_FILE}_find_cmd_out 2>&1
        if [[ $? -eq 0 ]]; then
            echo "File(s) successfully extracted."
        else
            echo "ERROR in extracting one or more file(s) from the image."
        fi
        for gzfile in $(find ${OUT_DIR} -type f); do
            /bin/gzip ${gzfile}
        done
     fi
    done
  done
else
   echo "There is no ${AGE} days old image available on this blade."
fi
if [[ "${IMAGE_FOUND}" == "FALSE" ]]; then
   echo "No instance [${SRV_NAME}] found, [${AGE} days.] old."
fi

/bin/rm ${SCRIPT_PATH}
